##### Libraries #####
JS:

$TOLOKA_ASSETS/js/toloka-handlebars-templates.js
https://qiusihang.github.io/ticktalkturk/js/jquery.js
https://qiusihang.github.io/ticktalkturk/js/chatbot.js
https://lzhanggithub.github.io/client_fake.js

CSS:

https://lzhanggithub.github.io/client.css

#####################HTML###############################
<a target="_blank" id="anchr">Edit Avatar</a>
<textarea id="avatar_url" width = 300px></textarea>
<button onclick="save_avatar()">Save avatar</button>

<div id="progress-bar">
   <div class="w3-light-grey">
    <div id="myBar" class="w3-container w3-green" style="height:24px;width:0%">
    </div>
  </div>
</div>

<div id="container">
         <div id="history-container">
            <table id="chat-history"></table>
         </div>
         <div id="message-container"><textarea id="message" name="message" onkeydown="onKeyDown(event)" placeholder="Type your message here" rows="1"></textarea></div>
         <div id="send-button" onclick="click_send()"><img src="https://qiusihang.github.io/ticktalkturk/style/send.png" width="20px" style="vertical-align:middle"/></div>
         <div id="message-cover">Please reply the chatbot by selecting the option(s).</div>
         <div id="submit" style="cursor:pointer" onclick="submit()">
            <div style="font-size:16px;border:0px;background:rgba(0,0,0,0);color:#666666"><b>SUBMIT</b></div>
            <textarea id="chat-answer" name="chat-answer" style="display:none"></textarea>
         </div>
      </div>




##################################### JS ################################

exports.Task = extend(TolokaHandlebarsTask, function (options) {
  TolokaHandlebarsTask.call(this, options);
}, {
  onRender: function() {
    // DOM element for task is formed (available via #getDOMElement()) 
    init_fake_news(
    this.getOptions()['task']['input_values']['usr_avatar'],
    this.getOptions()['task']['input_values']['title'],
    this.getOptions()['task']['input_values']['article'],
    this.getOptions()['task']['input_values']['true_label']);
  },
  validate: function(solution) {
        var errors = null;

        // If no words are selected, we show an error message.
        var pred_label = return_results_fake_news_label();
        var rationale = return_results_fake_news_rationale()
        console.log("from toloko label "  + pred_label);
        console.log("from toloko rat "  + rationale);
        this.setSolutionOutputValue("pred_label",pred_label);
        this.setSolutionOutputValue("rationale",rationale);
        console.log(solution);
        submit();
        return errors || TolokaHandlebarsTask.prototype.validate.call(this, solution);
    },
  onDestroy: function() {
    // Task is completed. Global resources can be released (if used)
  }
});

function extend(ParentClass, constructorFunction, prototypeHash) {
  constructorFunction = constructorFunction || function () {};
  prototypeHash = prototypeHash || {};
  if (ParentClass) {
    constructorFunction.prototype = Object.create(ParentClass.prototype);
  }
  for (var i in prototypeHash) {
    constructorFunction.prototype[i] = prototypeHash[i];
  }
  return constructorFunction;
}



########################## var nammes ##################################
Input

title:string:required
article:string:required
true_label:string
usr_avatar:string

output

rationale:string:required
pred_label:string:required
